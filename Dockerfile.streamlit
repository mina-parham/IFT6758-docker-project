# To build a container, you will use the docker build command
# https://docs.docker.com/engine/reference/commandline/build/
#
#   docker build -t <IMAGE TAG> -f Dockerfile.serving .
#   docker build -t <IMAGE TAG> -f Dockerfile.jupyter .
#


# https://docs.docker.com/engine/reference/builder/#from
# You shouldn't need to change this
FROM python:3.7

# https://docs.docker.com/engine/reference/builder/#workdir
# Create and cd into /code as your working directory
WORKDIR /code


# The main docker commands you will find useful:
#
# Add a file or directory
# https://docs.docker.com/engine/reference/builder/#add
#
ADD ./streamlit ./streamlit
#
# Run a shell command (tip: chain shell commands with && rather than multiple RUN commands)
# https://docs.docker.com/engine/reference/builder/#run
#
# RUN pip install wheel
# COPY streamlit/requirements.txt .
# RUN pip install -r requirements.txt

# Add application
ADD ./streamlit/streamlit_app.py ./streamlit_app.py
# Set an environment variable:
# https://docs.docker.com/engine/reference/builder/#env
#
ENV STREAMLIT_PORT=8892
#<ENV_VAR>=<DEFAULT>
#
# Expose a port
# https://docs.docker.com/engine/reference/builder/#port
#
EXPOSE ${STREAMLIT_PORT}

# Provide default command for executing container
# https://docs.docker.com/engine/reference/builder/#cmd
#
CMD streamlit run main.py --server.port=8892 --server.address=0.0.0.0



# TODO: add code, optionally a default model if you want


# TODO: install libs


# TODO: expose ports (or do this in docker-compose)


# TODO: specify default command - this is not required because you can always specify the command
# either with the docker run command or in the docker-compose file
